{"version":3,"sources":["components/ProgressBar/ProgressBar.js","components/ProgressBar/index.js","components/Button/Button.js","components/Button/index.js","../config/componentData.js","docs/examples/Button/ExampleButton.js","docs/examples/Button/ExampleButtonSubmit.js","docs/examples/ProgressBar/ExampleProgressBar100.js","docs/examples/ProgressBar/ExampleProgressBar25.js","docs/examples/ProgressBar/ExampleProgressBar50.js","docs/examples/ProgressBar/ExampleProgressBar75.js","components/Select/Select.js","docs/examples/Select/ExampleSelect.js","docs/examples sync /^/.//.*$","docs/Navigation.js","docs/CodeExample.js","docs/Example.js","docs/Props.js","docs/ComponentPage.js","docs/Docs.js","serviceWorker.js","index.js"],"names":["ProgressBar","getColor","_this","props","percent","getWidthAsPercentOfTotalWidth","parseInt","width","_this$props","this","height","react_default","a","createElement","style","border","borderRadius","backgroundColor","Component","defaultProps","__webpack_require__","d","__webpack_exports__","components_ProgressBar_ProgressBar","Button","_ref","_ref$text","text","_ref$type","type","Button_Button","module","exports","name","description","required","defaultValue","value","computed","code","examples","label","onChange","options","r","ExampleButton","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","alright_components_Button__WEBPACK_IMPORTED_MODULE_1__","ExampleButtonSubmit","ExampleProgressBar100","alright_components_ProgressBar__WEBPACK_IMPORTED_MODULE_1__","ExampleProgressBar25","ExampleProgressBar50","ExampleProgressBar75","Select","mappedOptions","map","option","key","ExampleSelect","Select_Select","./Button/ExampleButton","./Button/ExampleButton.js","./Button/ExampleButtonSubmit","./Button/ExampleButtonSubmit.js","./ProgressBar/ExampleProgressBar100","./ProgressBar/ExampleProgressBar100.js","./ProgressBar/ExampleProgressBar25","./ProgressBar/ExampleProgressBar25.js","./ProgressBar/ExampleProgressBar50","./ProgressBar/ExampleProgressBar50.js","./ProgressBar/ExampleProgressBar75","./ProgressBar/ExampleProgressBar75.js","./Select/ExampleSelect","./Select/ExampleSelect.js","webpackContext","req","id","webpackContextResolve","e","Error","keys","Object","resolve","Navigation","components","className","href","concat","CodeExample","hljs","registerLanguage","javascript","highlightBlock","element","ref","children","React","Example","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggleCode","event","preventDefault","setState","prevState","showCode","state","_this$props$example","example","ExampleComponent","require","componentName","default","onClick","docs_CodeExample","Props","ComponentPage","component","length","docs_Example","docs_Props","Docs","route","window","location","hash","substr","_this2","addEventListener","componentData","filter","docs_Navigation","docs_ComponentPage","Boolean","hostname","match","ReactDOM","render","Docs_Docs","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"mJAGMA,6MACFC,SAAW,WACP,OAA2B,MAAvBC,EAAKC,MAAMC,QAAwB,QAChCF,EAAKC,MAAMC,QAAU,GACtB,OACAF,EAAKC,MAAMC,QAAU,GACrB,MACA,eAGVC,8BAAgC,WAC5B,OAAOC,SAASJ,EAAKC,MAAMI,OAASL,EAAKC,MAAMC,QAAU,KAAM,6EAG1D,IAAAI,EAC8BC,KAAKN,MAAhCC,EADHI,EACGJ,QAASG,EADZC,EACYD,MAAOG,EADnBF,EACmBE,OACxB,OACIC,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHC,OAAQ,sBACRR,QACAS,aAAc,QAGlBL,EAAAC,EAAAC,cAAA,OACIC,MAAO,CACHP,MAAOE,KAAKJ,gCACZK,SACAO,gBAAiBR,KAAKR,SAASG,cA5B7Bc,aA0C1BlB,EAAYmB,aAAe,CACvBT,OAAQ,GACRH,MAAO,KAGIP,QClDfoB,EAAAC,EAAAC,EAAA,sBAAAC,sDCgBeC,MAZf,SAAAC,GAAsD,IAAAC,EAAAD,EAApCE,YAAoC,IAAAD,EAA7B,SAA6BA,EAAAE,EAAAH,EAAnBI,YAAmB,IAAAD,EAAZ,SAAYA,EAClD,OAAOjB,EAAAC,EAAAC,cAAA,UAAQgB,KAAMA,GAAOF,ICLhCP,EAAAC,EAAAC,EAAA,sBAAAQ,mBCAAC,EAAAC,QAEA,EACAC,KAAA,SACAC,YAAA,0CACA/B,MAAA,CACAwB,KAAA,CACAE,KAAA,CACAI,KAAA,UAEAE,UAAA,EACAD,YAAA,cACAE,aAAA,CACAC,MAAA,WACAC,UAAA,IAGAT,KAAA,CACAA,KAAA,CACAI,KAAA,UAEAE,UAAA,EACAD,YAAA,cACAE,aAAA,CACAC,MAAA,WACAC,UAAA,KAIAC,KAAA,+YACAC,SAAA,EACAP,KAAA,gBACAC,YAAA,GACAK,KAAA,uKACG,CACHN,KAAA,sBACAC,YAAA,GACAK,KAAA,+LAEC,CACDN,KAAA,YACAC,YAAA,GACA/B,MAAA,CACAsC,MAAA,CACAZ,KAAA,CACAI,KAAA,UAEAE,UAAA,EACAD,YAAA,GACAE,aAAA,CACAC,MAAA,UACAC,UAAA,IAGAI,SAAA,CACAb,KAAA,CACAI,KAAA,QAEAE,UAAA,EACAD,YAAA,IAEAG,MAAA,CACAR,KAAA,CACAI,KAAA,UAEAE,UAAA,EACAD,YAAA,GACAE,aAAA,CACAC,MAAA,KACAC,UAAA,KAIAC,KAAA,4dACAC,SAAA,IACC,CACDP,KAAA,cACAC,YAAA,GACA/B,MAAA,CACAC,QAAA,CACAyB,KAAA,CACAI,KAAA,UAEAE,UAAA,EACAD,YAAA,IAEA3B,MAAA,CACAsB,KAAA,CACAI,KAAA,UAEAE,UAAA,EACAD,YAAA,GACAE,aAAA,CACAC,MAAA,MACAC,UAAA,IAGA5B,OAAA,CACAmB,KAAA,CACAI,KAAA,UAEAE,UAAA,EACAD,YAAA,GACAE,aAAA,CACAC,MAAA,KACAC,UAAA,KAIAC,KAAA,4zCACAC,SAAA,EACAP,KAAA,wBACAC,YAAA,sBACAK,KAAA,0NACG,CACHN,KAAA,uBACAC,YAAA,qBACAK,KAAA,uNACG,CACHN,KAAA,uBACAC,YAAA,qBACAK,KAAA,uNACG,CACHN,KAAA,uBACAC,YAAA,qBACAK,KAAA,yNAEC,CACDN,KAAA,SACAC,YAAA,GACA/B,MAAA,CACAuC,SAAA,CACAb,KAAA,CACAI,KAAA,QAEAE,UAAA,EACAD,YAAA,IAEAS,QAAA,CACAd,KAAA,CACAI,KAAA,SAEAE,UAAA,EACAD,YAAA,GACAE,aAAA,CACAC,MAAA,oCACAC,UAAA,KAIAC,KAAA,uoBACAC,SAAA,EACAP,KAAA,gBACAC,YAAA,GACAK,KAAA,4LC1JAnB,EAAAwB,EAAAtB,GAAAF,EAAAC,EAAAC,EAAA,4BAAAuB,IAAA,IAAAC,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAA4B,EAAAF,GAAAG,EAAA7B,EAAA,GAGe,SAASyB,IACpB,OAAOE,EAAAnC,EAAAC,cAACoC,EAAA,EAAD,CAAQtB,KAAK,wCCJxBP,EAAAwB,EAAAtB,GAAAF,EAAAC,EAAAC,EAAA,4BAAA4B,IAAA,IAAAJ,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAA4B,EAAAF,GAAAG,EAAA7B,EAAA,GAGe,SAAS8B,IACpB,OAAOH,EAAAnC,EAAAC,cAACoC,EAAA,EAAD,CAAQtB,KAAK,OAAOE,KAAK,0CCJpCT,EAAAwB,EAAAtB,GAAAF,EAAAC,EAAAC,EAAA,4BAAA6B,IAAA,IAAAL,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAA4B,EAAAF,GAAAM,EAAAhC,EAAA,GAIe,SAAS+B,IACpB,OAAOJ,EAAAnC,EAAAC,cAACuC,EAAA,EAAD,CAAahD,QAAS,qCCLjCgB,EAAAwB,EAAAtB,GAAAF,EAAAC,EAAAC,EAAA,4BAAA+B,IAAA,IAAAP,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAA4B,EAAAF,GAAAM,EAAAhC,EAAA,GAIe,SAASiC,IACpB,OAAON,EAAAnC,EAAAC,cAACuC,EAAA,EAAD,CAAahD,QAAS,oCCLjCgB,EAAAwB,EAAAtB,GAAAF,EAAAC,EAAAC,EAAA,4BAAAgC,IAAA,IAAAR,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAA4B,EAAAF,GAAAM,EAAAhC,EAAA,GAIe,SAASkC,IACpB,OAAOP,EAAAnC,EAAAC,cAACuC,EAAA,EAAD,CAAahD,QAAS,oCCLjCgB,EAAAwB,EAAAtB,GAAAF,EAAAC,EAAAC,EAAA,4BAAAiC,IAAA,IAAAT,EAAA1B,EAAA,GAAA2B,EAAA3B,EAAA4B,EAAAF,GAAAM,EAAAhC,EAAA,GAIe,SAASmC,IACpB,OAAOR,EAAAnC,EAAAC,cAACuC,EAAA,EAAD,CAAahD,QAAS,+DCFjC,SAASoD,EAAT/B,GAA8C,IAA5BgB,EAA4BhB,EAA5BgB,MAAOC,EAAqBjB,EAArBiB,SACfe,EADoChC,EAAXkB,QACDe,IAAI,SAAAC,GAAM,OACpChD,EAAAC,EAAAC,cAAA,UAAQ+C,IAAKD,EAAOtB,MAAOA,MAAOsB,EAAOtB,OACpCsB,EAAOlB,SAGhB,OACI9B,EAAAC,EAAAC,cAAA,aACK4B,EACD9B,EAAAC,EAAAC,cAAA,UAAQ6B,SAAUA,GAAWe,IAUzCD,EAAOrC,aAAe,CAClBwB,QAAS,CAAC,CAAEF,MAAO,WAAYJ,MAAO,KAG3BmB,QCvBA,SAASK,IACpB,OAAOlD,EAAAC,EAAAC,cAACiD,EAAD,MAJX1C,EAAAC,EAAAC,EAAA,4BAAAuC,kFCAA,IAAAH,EAAA,CACAK,yBAAA,GACAC,4BAAA,GACAC,+BAAA,GACAC,kCAAA,GACAC,sCAAA,GACAC,yCAAA,GACAC,qCAAA,GACAC,wCAAA,GACAC,qCAAA,GACAC,wCAAA,GACAC,qCAAA,GACAC,wCAAA,GACAC,yBAAA,GACAC,4BAAA,IAIA,SAAAC,EAAAC,GACA,IAAAC,EAAAC,EAAAF,GACA,OAAA1D,EAAA2D,GAEA,SAAAC,EAAAF,GACA,IAAAC,EAAArB,EAAAoB,GACA,KAAAC,EAAA,IACA,IAAAE,EAAA,IAAAC,MAAA,uBAAAJ,EAAA,KAEA,MADAG,EAAA1C,KAAA,mBACA0C,EAEA,OAAAF,EAEAF,EAAAM,KAAA,WACA,OAAAC,OAAAD,KAAAzB,IAEAmB,EAAAQ,QAAAL,EACAjD,EAAAC,QAAA6C,EACAA,EAAAE,GAAA,8HCbeO,EApBI,SAAA7D,GAAkB,IAAhB8D,EAAgB9D,EAAhB8D,WACnB,OACE5E,EAAAC,EAAAC,cAAA,MAAI2E,UAAU,cAEVD,EAAW7B,IAAK,SAAAzB,GACd,OACEtB,EAAAC,EAAAC,cAAA,MAAI+C,IAAK3B,GACPtB,EAAAC,EAAAC,cAAA,KAAG4E,KAAI,IAAAC,OAAMzD,IAASA,yCCqBrB0D,8LArBPC,IAAKC,iBAAiB,aAAcC,KACpCF,IAAKG,eAAetF,KAAKuF,0CAGpB,IAAA9F,EAAAO,KACL,OACIE,EAAAC,EAAAC,cAAA,OACIoF,IAAK,SAAAA,GACD/F,EAAK8F,QAAUC,IAGnBtF,EAAAC,EAAAC,cAAA,YAAOJ,KAAKN,MAAM+F,kBAbRC,IAAMjF,WCuCjBkF,cA1CX,SAAAA,EAAYjG,GAAO,IAAAD,EAAA,OAAAkF,OAAAiB,EAAA,EAAAjB,CAAA3E,KAAA2F,IACflG,EAAAkF,OAAAkB,EAAA,EAAAlB,CAAA3E,KAAA2E,OAAAmB,EAAA,EAAAnB,CAAAgB,GAAAI,KAAA/F,KAAMN,KAIVsG,WAAa,SAAAC,GACTA,EAAMC,iBACNzG,EAAK0G,SAAS,SAAAC,GACV,MAAO,CAAEC,UAAWD,EAAUC,aANlC5G,EAAK6G,MAAQ,CAAED,UAAU,GAFV5G,wEAYV,IACG4G,EAAarG,KAAKsG,MAAlBD,SADHE,EAE+BvG,KAAKN,MAAM8G,QAAvC1E,EAFHyE,EAEGzE,KAAML,EAFT8E,EAES9E,YAAaD,EAFtB+E,EAEsB/E,KAErBiF,EAAmBC,MAAQ,KAAAzB,OAC7BjF,KAAKN,MAAMiH,cADiB,KAAA1B,OAE5BzD,IAAQoF,QACZ,OACI1G,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,WACVtD,GAAevB,EAAAC,EAAAC,cAAA,UAAKqB,GAErBvB,EAAAC,EAAAC,cAACqG,EAAD,MAEAvG,EAAAC,EAAAC,cAAA,SACIF,EAAAC,EAAAC,cAAA,KAAG4E,KAAK,GAAG6B,QAAS7G,KAAKgG,YACpBK,EAAW,OAAS,OADzB,UAKHA,GAAYnG,EAAAC,EAAAC,cAAC0G,EAAD,KAAchF,WAhCrB4D,IAAMjF,WCmCbsG,EApCD,SAAA/F,GAAe,IAAZtB,EAAYsB,EAAZtB,MACb,OACIQ,EAAAC,EAAAC,cAAA,SAAO2E,UAAU,SACb7E,EAAAC,EAAAC,cAAA,aACIF,EAAAC,EAAAC,cAAA,UACIF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,yBACAF,EAAAC,EAAAC,cAAA,kBACAF,EAAAC,EAAAC,cAAA,qBACAF,EAAAC,EAAAC,cAAA,wBAGRF,EAAAC,EAAAC,cAAA,aACKuE,OAAOD,KAAKhF,GAAOuD,IAAI,SAAAE,GACpB,OACIjD,EAAAC,EAAAC,cAAA,MAAI+C,IAAKA,GACLjD,EAAAC,EAAAC,cAAA,UAAK+C,GACLjD,EAAAC,EAAAC,cAAA,UAAKV,EAAMyD,GAAK1B,aAChBvB,EAAAC,EAAAC,cAAA,UAAKV,EAAMyD,GAAK/B,KAAKI,MACrBtB,EAAAC,EAAAC,cAAA,UACKV,EAAMyD,GAAKxB,cACRjC,EAAMyD,GAAKxB,aAAaC,OAEhC1B,EAAAC,EAAAC,cAAA,UAAKV,EAAMyD,GAAKzB,UAAY,aCYzCsF,EAjCO,SAAAhG,GAAmB,IAAhBiG,EAAgBjG,EAAhBiG,UACbzF,EAAuCyF,EAAvCzF,KAAMC,EAAiCwF,EAAjCxF,YAAa/B,EAAoBuH,EAApBvH,MAAOqC,EAAakF,EAAblF,SAElC,OACI7B,EAAAC,EAAAC,cAAA,OAAK2E,UAAU,iBACX7E,EAAAC,EAAAC,cAAA,UAAKoB,GACLtB,EAAAC,EAAAC,cAAA,SAAIqB,GAEJvB,EAAAC,EAAAC,cAAA,oBAAY2B,EAASmF,OAAS,GAAK,KAClCnF,EAASmF,OAAS,EACbnF,EAASkB,IAAI,SAAAuD,GAAO,OAChBtG,EAAAC,EAAAC,cAAC+G,EAAD,CACIhE,IAAKqD,EAAQ1E,KACb0E,QAASA,EACTG,cAAenF,MAGvB,qBAENtB,EAAAC,EAAAC,cAAA,mBACCV,EACGQ,EAAAC,EAAAC,cAACgH,EAAD,CAAO1H,MAAOA,IAEd,qDCvBK2H,cACjB,SAAAA,EAAY3H,GAAO,IAAAD,EAAA,OAAAkF,OAAAiB,EAAA,EAAAjB,CAAA3E,KAAAqH,IACf5H,EAAAkF,OAAAkB,EAAA,EAAAlB,CAAA3E,KAAA2E,OAAAmB,EAAA,EAAAnB,CAAA0C,GAAAtB,KAAA/F,KAAMN,KACD4G,MAAQ,CACTgB,MAAOC,OAAOC,SAASC,KAAKC,OAAO,IAHxBjI,mFAOC,IAAAkI,EAAA3H,KAChBuH,OAAOK,iBAAiB,aAAc,WAClCD,EAAKxB,SAAS,CAAEmB,MAAOC,OAAOC,SAASC,KAAKC,OAAO,wCAIlD,IACGJ,EAAUtH,KAAKsG,MAAfgB,MACFL,EAAYK,EACZO,IAAcC,OAAO,SAAAb,GAAS,OAAIA,EAAUzF,OAAS8F,IAAO,GAC5DO,IAAc,GAEpB,OACI3H,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,gCACAF,EAAAC,EAAAC,cAAC2H,EAAD,CACIjD,WAAY+C,IAAc5E,IAAI,SAAAgE,GAAS,OAAIA,EAAUzF,SAEzDtB,EAAAC,EAAAC,cAAC4H,EAAD,CAAef,UAAWA,YA1BRvB,IAAMjF,WCOpBwH,QACW,cAA7BV,OAAOC,SAASU,UAEe,UAA7BX,OAAOC,SAASU,UAEhBX,OAAOC,SAASU,SAASC,MACvB,2DCXNC,IAASC,OAAOnI,EAAAC,EAAAC,cAACkI,EAAD,MAAUC,SAASC,eAAe,SD0H5C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.9e6101ec.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass ProgressBar extends Component {\n    getColor = () => {\n        if (this.props.percent === 100) return 'green';\n        return this.props.percent > 50\n            ? 'gold'\n            : this.props.percent > 25\n            ? 'red'\n            : 'firebrick';\n    };\n\n    getWidthAsPercentOfTotalWidth = () => {\n        return parseInt(this.props.width * (this.props.percent / 100), 10);\n    };\n\n    render() {\n        const { percent, width, height } = this.props;\n        return (\n            <div\n                style={{\n                    border: '1px solid lightgray',\n                    width,\n                    borderRadius: '4px'\n                }}\n            >\n                <div\n                    style={{\n                        width: this.getWidthAsPercentOfTotalWidth(),\n                        height,\n                        backgroundColor: this.getColor(percent)\n                    }}\n                />\n            </div>\n        );\n    }\n}\n\nProgressBar.propTypes = {\n    percent: PropTypes.number.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number\n};\n\nProgressBar.defaultProps = {\n    height: 20,\n    width: 200\n};\n\nexport default ProgressBar;\n","export { default } from './ProgressBar';\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\n/** A really great button Button component. */\nfunction Button({ text = 'Button', type = 'button' }) {\n    return <button type={type}>{text}</button>;\n}\n\nButton.propTypes = {\n    /** Button Text */\n    text: PropTypes.string.isRequired,\n\n    /** Button Type */\n    type: PropTypes.string\n};\n\nexport default Button;\n","export { default } from './Button';\n","module.exports =\n/* eslint-disable */\n[{\n  \"name\": \"Button\",\n  \"description\": \"A really great button Button component.\",\n  \"props\": {\n    \"text\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Button Text\",\n      \"defaultValue\": {\n        \"value\": \"'Button'\",\n        \"computed\": false\n      }\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"Button Type\",\n      \"defaultValue\": {\n        \"value\": \"'button'\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\n/** A really great button Button component. */\\nfunction Button({ text = 'Button', type = 'button' }) {\\n    return <button type={type}>{text}</button>;\\n}\\n\\nButton.propTypes = {\\n    /** Button Text */\\n    text: PropTypes.string.isRequired,\\n\\n    /** Button Type */\\n    type: PropTypes.string\\n};\\n\\nexport default Button;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleButton\",\n    \"description\": \"\",\n    \"code\": \"import React from 'react';\\nimport Button from 'alright-components/Button';\\n\\nexport default function ExampleButton() {\\n    return <Button text=\\\"Test\\\" />;\\n}\\n\"\n  }, {\n    \"name\": \"ExampleButtonSubmit\",\n    \"description\": \"\",\n    \"code\": \"import React from 'react';\\nimport Button from 'alright-components/Button';\\n\\nexport default function ExampleButtonSubmit() {\\n    return <Button text=\\\"Test\\\" type=\\\"submit\\\" />;\\n}\\n\"\n  }]\n}, {\n  \"name\": \"InputText\",\n  \"description\": \"\",\n  \"props\": {\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"'Label'\",\n        \"computed\": false\n      }\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nfunction InputText({ label = 'Label', onChange, value = '' }) {\\n    return (\\n        <label>\\n            {label}\\n            <input className=\\\"input\\\" onChange={onChange} value={value} />\\n        </label>\\n    );\\n}\\n\\nInputText.propTypes = {\\n    label: PropTypes.string.isRequired,\\n    onChange: PropTypes.func.isRequired,\\n    value: PropTypes.string.isRequired\\n};\\n\\nexport default InputText;\\n\",\n  \"examples\": []\n}, {\n  \"name\": \"ProgressBar\",\n  \"description\": \"\",\n  \"props\": {\n    \"percent\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"width\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"200\",\n        \"computed\": false\n      }\n    },\n    \"height\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"20\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React, { Component } from 'react';\\nimport PropTypes from 'prop-types';\\n\\nclass ProgressBar extends Component {\\n    getColor = () => {\\n        if (this.props.percent === 100) return 'green';\\n        return this.props.percent > 50\\n            ? 'gold'\\n            : this.props.percent > 25\\n            ? 'red'\\n            : 'firebrick';\\n    };\\n\\n    getWidthAsPercentOfTotalWidth = () => {\\n        return parseInt(this.props.width * (this.props.percent / 100), 10);\\n    };\\n\\n    render() {\\n        const { percent, width, height } = this.props;\\n        return (\\n            <div\\n                style={{\\n                    border: '1px solid lightgray',\\n                    width,\\n                    borderRadius: '4px'\\n                }}\\n            >\\n                <div\\n                    style={{\\n                        width: this.getWidthAsPercentOfTotalWidth(),\\n                        height,\\n                        backgroundColor: this.getColor(percent)\\n                    }}\\n                />\\n            </div>\\n        );\\n    }\\n}\\n\\nProgressBar.propTypes = {\\n    percent: PropTypes.number.isRequired,\\n    width: PropTypes.number.isRequired,\\n    height: PropTypes.number\\n};\\n\\nProgressBar.defaultProps = {\\n    height: 20,\\n    width: 200\\n};\\n\\nexport default ProgressBar;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleProgressBar100\",\n    \"description\": \"Shows 100% Complete\",\n    \"code\": \"import React from 'react';\\nimport ProgressBar from 'alright-components/ProgressBar';\\n\\n/** Shows 100% Complete */\\nexport default function ExampleProgressBar100() {\\n    return <ProgressBar percent={100} />;\\n}\\n\"\n  }, {\n    \"name\": \"ExampleProgressBar25\",\n    \"description\": \"Shows 25% Complete\",\n    \"code\": \"import React from 'react';\\nimport ProgressBar from 'alright-components/ProgressBar';\\n\\n/** Shows 25% Complete */\\nexport default function ExampleProgressBar25() {\\n    return <ProgressBar percent={25} />;\\n}\\n\"\n  }, {\n    \"name\": \"ExampleProgressBar50\",\n    \"description\": \"Shows 50% Complete\",\n    \"code\": \"import React from 'react';\\nimport ProgressBar from 'alright-components/ProgressBar';\\n\\n/** Shows 50% Complete */\\nexport default function ExampleProgressBar50() {\\n    return <ProgressBar percent={50} />;\\n}\\n\"\n  }, {\n    \"name\": \"ExampleProgressBar75\",\n    \"description\": \"Shows 75% Complete\",\n    \"code\": \"import React from 'react';\\nimport ProgressBar from 'alright-components/ProgressBar';\\n\\n/** Shows 75% Complete */\\nexport default function ExampleProgressBar75() {\\n    return <ProgressBar percent={75} />;\\n}\\n\"\n  }]\n}, {\n  \"name\": \"Select\",\n  \"description\": \"\",\n  \"props\": {\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"options\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\",\n      \"defaultValue\": {\n        \"value\": \"[{ label: 'Option 1', value: 1 }]\",\n        \"computed\": false\n      }\n    }\n  },\n  \"code\": \"import React from 'react';\\nimport PropTypes from 'prop-types';\\n\\nfunction Select({ label, onChange, options }) {\\n    const mappedOptions = options.map(option => (\\n        <option key={option.value} value={option.value}>\\n            {option.label}\\n        </option>\\n    ));\\n    return (\\n        <label>\\n            {label}\\n            <select onChange={onChange}>{mappedOptions}</select>\\n        </label>\\n    );\\n}\\n\\nSelect.propTypes = {\\n    onChange: PropTypes.func.isRequired,\\n    options: PropTypes.array.isRequired\\n};\\n\\nSelect.defaultProps = {\\n    options: [{ label: 'Option 1', value: 1 }]\\n};\\n\\nexport default Select;\\n\",\n  \"examples\": [{\n    \"name\": \"ExampleSelect\",\n    \"description\": \"\",\n    \"code\": \"import React from 'react';\\nimport Select from 'alright-components/Select';\\n\\nexport default function ExampleSelect() {\\n    return <Select />;\\n}\\n\"\n  }]\n}];","import React from 'react';\nimport Button from 'alright-components/Button';\n\nexport default function ExampleButton() {\n    return <Button text=\"Test\" />;\n}\n","import React from 'react';\nimport Button from 'alright-components/Button';\n\nexport default function ExampleButtonSubmit() {\n    return <Button text=\"Test\" type=\"submit\" />;\n}\n","import React from 'react';\nimport ProgressBar from 'alright-components/ProgressBar';\n\n/** Shows 100% Complete */\nexport default function ExampleProgressBar100() {\n    return <ProgressBar percent={100} />;\n}\n","import React from 'react';\nimport ProgressBar from 'alright-components/ProgressBar';\n\n/** Shows 25% Complete */\nexport default function ExampleProgressBar25() {\n    return <ProgressBar percent={25} />;\n}\n","import React from 'react';\nimport ProgressBar from 'alright-components/ProgressBar';\n\n/** Shows 50% Complete */\nexport default function ExampleProgressBar50() {\n    return <ProgressBar percent={50} />;\n}\n","import React from 'react';\nimport ProgressBar from 'alright-components/ProgressBar';\n\n/** Shows 75% Complete */\nexport default function ExampleProgressBar75() {\n    return <ProgressBar percent={75} />;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nfunction Select({ label, onChange, options }) {\n    const mappedOptions = options.map(option => (\n        <option key={option.value} value={option.value}>\n            {option.label}\n        </option>\n    ));\n    return (\n        <label>\n            {label}\n            <select onChange={onChange}>{mappedOptions}</select>\n        </label>\n    );\n}\n\nSelect.propTypes = {\n    onChange: PropTypes.func.isRequired,\n    options: PropTypes.array.isRequired\n};\n\nSelect.defaultProps = {\n    options: [{ label: 'Option 1', value: 1 }]\n};\n\nexport default Select;\n","import React from 'react';\nimport Select from 'alright-components/Select';\n\nexport default function ExampleSelect() {\n    return <Select />;\n}\n","var map = {\n\t\"./Button/ExampleButton\": 11,\n\t\"./Button/ExampleButton.js\": 11,\n\t\"./Button/ExampleButtonSubmit\": 12,\n\t\"./Button/ExampleButtonSubmit.js\": 12,\n\t\"./ProgressBar/ExampleProgressBar100\": 13,\n\t\"./ProgressBar/ExampleProgressBar100.js\": 13,\n\t\"./ProgressBar/ExampleProgressBar25\": 14,\n\t\"./ProgressBar/ExampleProgressBar25.js\": 14,\n\t\"./ProgressBar/ExampleProgressBar50\": 15,\n\t\"./ProgressBar/ExampleProgressBar50.js\": 15,\n\t\"./ProgressBar/ExampleProgressBar75\": 16,\n\t\"./ProgressBar/ExampleProgressBar75.js\": 16,\n\t\"./Select/ExampleSelect\": 17,\n\t\"./Select/ExampleSelect.js\": 17\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 30;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Navigation = ({components}) => {\n  return (\n    <ul className=\"navigation\">\n      {\n        components.map( name => {\n          return (\n            <li key={name}>\n              <a href={`#${name}`}>{name}</a>\n            </li>\n          )\n        })\n      }\n    </ul>\n  )\n}\n\nNavigation.propTypes = {\n  components: PropTypes.array.isRequired\n};\n\nexport default Navigation;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport hljs from 'highlight.js/lib/highlight';\nimport javascript from 'highlight.js/lib/languages/javascript';\n\n// This way is easy, but adds 170K gzipped to bundle since all langs are included.\n// import Highlight from 'react-highlight';\n\nclass CodeExample extends React.Component {\n    componentDidMount() {\n        hljs.registerLanguage('javascript', javascript);\n        hljs.highlightBlock(this.element);\n    }\n\n    render() {\n        return (\n            <pre\n                ref={ref => {\n                    this.element = ref;\n                }}\n            >\n                <code>{this.props.children}</code>\n            </pre>\n        );\n    }\n}\n\nCodeExample.propTypes = {\n    children: PropTypes.string.isRequired\n};\n\nexport default CodeExample;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport CodeExample from './CodeExample';\n\nclass Example extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = { showCode: false };\n    }\n\n    toggleCode = event => {\n        event.preventDefault();\n        this.setState(prevState => {\n            return { showCode: !prevState.showCode };\n        });\n    };\n\n    render() {\n        const { showCode } = this.state;\n        const { code, description, name } = this.props.example;\n        // Must use CommonJS require to dynamically require because ES Modules must be statically analyzable.\n        const ExampleComponent = require(`./examples/${\n            this.props.componentName\n        }/${name}`).default;\n        return (\n            <div className=\"example\">\n                {description && <h4>{description}</h4>}\n\n                <ExampleComponent />\n\n                <p>\n                    <a href=\"\" onClick={this.toggleCode}>\n                        {showCode ? 'Hide' : 'Show'} Code\n                    </a>\n                </p>\n\n                {showCode && <CodeExample>{code}</CodeExample>}\n            </div>\n        );\n    }\n}\n\nExample.propTypes = {\n    example: PropTypes.object.isRequired,\n    componentName: PropTypes.string.isRequired\n};\n\nexport default Example;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Props = ({ props }) => {\n    return (\n        <table className=\"props\">\n            <thead>\n                <tr>\n                    <th>Name</th>\n                    <th>Description</th>\n                    <th>Type</th>\n                    <th>Default</th>\n                    <th>Required</th>\n                </tr>\n            </thead>\n            <tbody>\n                {Object.keys(props).map(key => {\n                    return (\n                        <tr key={key}>\n                            <td>{key}</td>\n                            <td>{props[key].description}</td>\n                            <td>{props[key].type.name}</td>\n                            <td>\n                                {props[key].defaultValue &&\n                                    props[key].defaultValue.value}\n                            </td>\n                            <td>{props[key].required && 'Yes'}</td>\n                        </tr>\n                    );\n                })}\n            </tbody>\n        </table>\n    );\n};\n\nProps.propTypes = {\n    props: PropTypes.object.isRequired\n};\n\nexport default Props;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Example from './Example';\nimport Props from './Props';\n\nconst ComponentPage = ({ component }) => {\n    const { name, description, props, examples } = component;\n\n    return (\n        <div className=\"componentpage\">\n            <h2>{name}</h2>\n            <p>{description}</p>\n\n            <h3>Example{examples.length > 1 && 's'}</h3>\n            {examples.length > 0\n                ? examples.map(example => (\n                      <Example\n                          key={example.code}\n                          example={example}\n                          componentName={name}\n                      />\n                  ))\n                : 'No examples exist.'}\n\n            <h3>Props</h3>\n            {props ? (\n                <Props props={props} />\n            ) : (\n                'This component accepts no props.'\n            )}\n        </div>\n    );\n};\n\nComponentPage.propTypes = {\n    component: PropTypes.object.isRequired\n};\n\nexport default ComponentPage;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport ComponentPage from './ComponentPage';\nimport componentData from '../../config/componentData';\n\nexport default class Docs extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            route: window.location.hash.substr(1)\n        };\n    }\n\n    componentDidMount() {\n        window.addEventListener('hashchange', () => {\n            this.setState({ route: window.location.hash.substr(1) });\n        });\n    }\n\n    render() {\n        const { route } = this.state;\n        const component = route\n            ? componentData.filter(component => component.name === route)[0]\n            : componentData[0];\n\n        return (\n            <div>\n                <h1>Alright Components</h1>\n                <Navigation\n                    components={componentData.map(component => component.name)}\n                />\n                <ComponentPage component={component} />\n            </div>\n        );\n    }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport '../node_modules/highlight.js/styles/atom-one-dark.css';\nimport Docs from './docs/Docs';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Docs />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}